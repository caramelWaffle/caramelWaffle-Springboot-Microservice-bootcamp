services:
  # Account Database
  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG"]
      timeout: 10s
      retries: 10
    networks:
      - waffle
  account-db:
    image: mysql
    container_name: account-db
    ports:
        - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: account-db
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: root
    networks:
      - waffle

# Loan Database
  loan-db:
    image: mysql
    container_name: loan-db
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: loan-db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    networks:
      - waffle

  # Card Database
  card-db:
    image: mysql
    container_name: card-db
    ports:
      - "3308:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
      interval: 10s
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: card-db
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    networks:
      - waffle

  # RabbitMQ
  rabbit:
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    networks:
      - waffle

  # Config-Server Microservice
  configserver:
    image: kodomochi/configserver:v7
    container_name: configserver-microservice
    ports:
      - "8071:8071"
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent http://localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - waffle
    environment:
      SPRING_RABBITMQ_HOST: "rabbit"

  # Discovery Server
  discoveryserver:
    image: kodomochi/discoveryserver:v7
    container_name: discoveryserver-microservice
    ports:
      - "8070:8070"
    depends_on:
      configserver:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent http://localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - waffle
    environment:
      SPRING_APPLICATION_NAME: discoveryserver
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default # default, dev, uat, prod
  
  # Account Microservice
  accounts:
    image: kodomochi/accounts:v7
    container_name: accounts-microservice
    ports:
      - "8080:8080"
    depends_on:
      account-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail --silent http://localhost:8080/actuator/health/readiness | grep UP || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - waffle
    environment:
      SPRING_APPLICATION_NAME: accounts
      SPRING_DATASOURCE_URL: jdbc:mysql://account-db:3306/account-db
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: uat # default, dev, uat, prod
      SPRING_RABBITMQ_HOST: "rabbit"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discoveryserver:8070/eureka/"

# Loan Microservice
  loans:
    image: kodomochi/loans:v7
    container_name: loans-microservice
    ports:
      - "8090:8090"
    depends_on:
      loan-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent http://localhost:8090/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - waffle
    environment:
      SPRING_APPLICATION_NAME: loans
      SPRING_DATASOURCE_URL: jdbc:mysql://loan-db:3306/loan-db
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: uat # default, dev, uat, prod
      SPRING_RABBITMQ_HOST: "rabbit"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discoveryserver:8070/eureka/"

  # Card Microservice
  cards:
    image: kodomochi/card:v7
    container_name: cards-microservice
    ports:
      - "9000:9000"
    depends_on:
      card-db:
        condition: service_healthy
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail --silent http://localhost:9000/actuator/health/readiness | grep UP || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - waffle
    environment:
      SPRING_APPLICATION_NAME: card
      SPRING_DATASOURCE_URL: jdbc:mysql://card-db:3306/card-db
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: uat # default, dev, uat, prod
      SPRING_RABBITMQ_HOST: "rabbit"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discoveryserver:8070/eureka/"

  # Gateway Microservice
  gatewayserver:
    image: kodomochi/gatewayserver:v7
    container_name: gatewayserver-microservice
    ports:
      - "8072:8072"
    depends_on:
      configserver:
        condition: service_healthy
      discoveryserver:
        condition: service_healthy
      accounts:
        condition: service_healthy
      loans:
        condition: service_healthy
      cards:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 700m
    networks:
      - waffle
    environment:
      SPRING_APPLICATION_NAME: gatewayserver
      SPRING_DATASOURCE_URL: jdbc:mysql://account-db:3306/account-db
      SPRING_CONFIG_IMPORT: "configserver:http://configserver:8071/"
      SPRING_PROFILES_ACTIVE: default # default, dev, uat, prod
      SPRING_RABBITMQ_HOST: "rabbit"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://discoveryserver:8070/eureka/"
      SPRING_DATA_REDIS_CONNECTION_TIMEOUT: 2s
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 2s


networks:
  waffle:
    driver: "bridge"